name: serverless-secure-cicd
on:
  push:
    branches: ["main"]
  pull_request:

jobs:
  sast_and_iac_scans:
    name: SAST and IaC scans, fail on critical
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install scanners
        run: |
          pip install semgrep checkov
      - name: Run SAST with Semgrep
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
        run: semgrep ci --severity=ERROR
      - name: Run IaC scan with Checkov, fail only on HIGH and CRITICAL
        run: checkov -d . --soft-fail-on MEDIUM

  opa_policy_gate:
    name: OPA policy checks
    needs: sast_and_iac_scans
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install OPA
        run: |
          curl -L -o opa https://openpolicyagent.org/downloads/latest/opa_linux_amd64
          chmod +x opa && sudo mv opa /usr/local/bin/opa
      - name: Run OPA tests
        run: opa test policies/ -v

  deploy:
    name: Deploy
    if: ${{ inputs.deploy == 'yes' }}
    needs: opa_policy_gate
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Build and deploy with AWS SAM
        run: |
          pip install aws-sam-cli
          sam build
          sam deploy --no-confirm-changeset --stack-name jinja-api --capabilities CAPABILITY_IAM

  post_deploy_smoke:
    name: Smoke tests
    if: ${{ inputs.deploy == 'yes' }}
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set API base URL
        run: echo "API_BASE=${{ secrets.API_BASE_URL }}" >> $GITHUB_ENV
      - name: Run smoke tests
        run: python smoke.py "$API_BASE"
